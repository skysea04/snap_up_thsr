# Generated by Django 4.2 on 2024-02-10 17:32

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BookingRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Not Yet'), (1, 'Pending'), (2, 'Processing'), (3, 'Completed'), (-1, 'Expired'), (-2, 'Deleted')], default=1)),
                ('train_id', models.CharField(blank=True, max_length=10)),
                ('depart_station', models.PositiveSmallIntegerField(choices=[(1, '南港'), (2, '台北'), (3, '板橋'), (4, '桃園'), (5, '新竹'), (6, '苗栗'), (7, '台中'), (8, '彰化'), (9, '雲林'), (10, '嘉義'), (11, '台南'), (12, '左營')], default=1)),
                ('dest_station', models.PositiveSmallIntegerField(choices=[(1, '南港'), (2, '台北'), (3, '板橋'), (4, '桃園'), (5, '新竹'), (6, '苗栗'), (7, '台中'), (8, '彰化'), (9, '雲林'), (10, '嘉義'), (11, '台南'), (12, '左營')], default=12)),
                ('type_of_trip', models.PositiveSmallIntegerField(choices=[(0, 'One Way'), (1, 'Round Trip')], default=0)),
                ('booking_method', models.PositiveSmallIntegerField(choices=[(0, 'Time'), (1, 'Train No')], default=0)),
                ('seat_prefer', models.PositiveSmallIntegerField(choices=[(0, 'No Prefer'), (1, 'Prefer Window'), (2, 'Prefer Aisle')], default=0)),
                ('adult_num', models.PositiveSmallIntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')], default=1)),
                ('child_num', models.PositiveSmallIntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')], default=0)),
                ('disabled_num', models.PositiveSmallIntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')], default=0)),
                ('elder_num', models.PositiveSmallIntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')], default=0)),
                ('college_num', models.PositiveSmallIntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')], default=0)),
                ('depart_date', models.DateField()),
                ('earliest_depart_time', models.CharField(blank=True, choices=[('', ''), ('500A', '05:00'), ('530A', '05:30'), ('600A', '06:00'), ('630A', '06:30'), ('700A', '07:00'), ('730A', '07:30'), ('800A', '08:00'), ('830A', '08:30'), ('900A', '09:00'), ('930A', '09:30'), ('1000A', '10:00'), ('1030A', '10:30'), ('1100A', '11:00'), ('1130A', '11:30'), ('1200N', '12:00'), ('1230P', '12:30'), ('100P', '13:00'), ('130P', '13:30'), ('200P', '14:00'), ('230P', '14:30'), ('300P', '15:00'), ('330P', '15:30'), ('400P', '16:00'), ('430P', '16:30'), ('500P', '17:00'), ('530P', '17:30'), ('600P', '18:00'), ('630P', '18:30'), ('700P', '19:00'), ('730P', '19:30'), ('800P', '20:00'), ('830P', '20:30'), ('900P', '21:00'), ('930P', '21:30'), ('1000P', '22:00'), ('1030P', '22:30'), ('1100P', '23:00'), ('1130P', '23:30'), ('1201A', '23:59')], default='', max_length=10)),
                ('latest_arrival_time', models.CharField(blank=True, choices=[('', ''), ('500A', '05:00'), ('530A', '05:30'), ('600A', '06:00'), ('630A', '06:30'), ('700A', '07:00'), ('730A', '07:30'), ('800A', '08:00'), ('830A', '08:30'), ('900A', '09:00'), ('930A', '09:30'), ('1000A', '10:00'), ('1030A', '10:30'), ('1100A', '11:00'), ('1130A', '11:30'), ('1200N', '12:00'), ('1230P', '12:30'), ('100P', '13:00'), ('130P', '13:30'), ('200P', '14:00'), ('230P', '14:30'), ('300P', '15:00'), ('330P', '15:30'), ('400P', '16:00'), ('430P', '16:30'), ('500P', '17:00'), ('530P', '17:30'), ('600P', '18:00'), ('630P', '18:30'), ('700P', '19:00'), ('730P', '19:30'), ('800P', '20:00'), ('830P', '20:30'), ('900P', '21:00'), ('930P', '21:30'), ('1000P', '22:00'), ('1030P', '22:30'), ('1100P', '23:00'), ('1130P', '23:30'), ('1201A', '23:59')], default='1201A', max_length=10)),
                ('passenger_ids', models.JSONField(blank=True, default=list, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('error_msg', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='THSRTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ticket_id', models.CharField(blank=True, max_length=10)),
                ('total_price', models.CharField(blank=True, max_length=10)),
                ('payment_deadline', models.CharField(blank=True, max_length=10)),
                ('train_id', models.CharField(blank=True, max_length=10)),
                ('seat_num', models.CharField(blank=True, max_length=50)),
                ('date', models.CharField(blank=True, max_length=10)),
                ('depart_time', models.CharField(blank=True, max_length=255)),
                ('arrival_time', models.CharField(blank=True, max_length=255)),
                ('depart_station', models.PositiveSmallIntegerField(choices=[(1, '南港'), (2, '台北'), (3, '板橋'), (4, '桃園'), (5, '新竹'), (6, '苗栗'), (7, '台中'), (8, '彰化'), (9, '雲林'), (10, '嘉義'), (11, '台南'), (12, '左營')])),
                ('arrival_station', models.PositiveSmallIntegerField(choices=[(1, '南港'), (2, '台北'), (3, '板橋'), (4, '桃園'), (5, '新竹'), (6, '苗栗'), (7, '台中'), (8, '彰化'), (9, '雲林'), (10, '嘉義'), (11, '台南'), (12, '左營')])),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
